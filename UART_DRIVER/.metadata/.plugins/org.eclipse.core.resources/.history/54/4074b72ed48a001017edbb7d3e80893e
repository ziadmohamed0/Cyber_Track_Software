/*
 * dc_motor.cpp
 *
 *  Created on: Sep 4, 2025
 *      Author: ziad
 */
#include "dc_motor.h"

static DC_MOTOR_ENCODER* global_motor_instance = nullptr;


DC_MOTOR::DC_MOTOR(motor_cfg_t* cfg) :
					m_cfg(cfg),
					pin1(cfg->port, cfg->pins[0], GPIO_STATUS::OUTPUT_50MHz, GPIO_CONFIG::GP_PUSH_PULL),
					pin2(cfg->port, cfg->pins[1], GPIO_STATUS::OUTPUT_50MHz, GPIO_CONFIG::GP_PUSH_PULL),
					pwm(cfg->pwm_tim, 72-1, 1000-1, nullptr),
					position(0){}

void DC_MOTOR::move(motor_direction copy_direction) {
	switch (copy_direction) {
		case motor_direction::forward:
			this->forward();
			break;
		case motor_direction::reverse:
			this->reverse();
			break;
		case motor_direction::stop:
			this->stop();
			break;
		default:
			this->stop();
			break;
	}
}

void DC_MOTOR::forward() {
	this->pin1.set();
	this->pin2.clear();
}

void DC_MOTOR::reverse() {
	this->pin1.clear();
	this->pin2.set();
}

void DC_MOTOR::stop() {
	this->pin1.clear();
	this->pin2.clear();
}
